<link rel="stylesheet" href="../../program/signUp/css/style.css">
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@700&display=swap" rel="stylesheet">
<a href="/"> <h1 class="logo">billion love </h1></a>
<div class="row">
  <div class="col-md-12">
    <form action="/signUp/process" method="post" onsubmit="return submitChk()">
      <h1 class="login-title"><b> 회원가입 </b></h1>
      
      <fieldset>

        <legend><span class="number">1</span> 계정</legend>

        <label for="email">
            아이디(이메일)
            <font class="emailMsg" color="red">
                <% if(locals.emailMsg) { %>
                    <%= emailMsg %> 
                <% } %>  
            </font>
        </label>

        <% if(locals.member_id) { %>
            <input type="email" value="<%=member_id%> " id="email" name="member_id" placeholder="ex) zz1212100@naver.com" required><%  %>
        <% } else { %>
            <input type="email" id="email" name="member_id" placeholder="ex) zz1212100@naver.com" required>
        <% } %>  

        


        <label for="password">비밀번호 </label>
        <input type="password" id="password" name="member_pw" minlength="8" required>

        <label for="re-password">비밀번호 확인 
            <font class="pwMsg" color="red">
            </font>
        </label>
        <input type="password" id="re-password" minlength="8" required>
      </fieldset>
      <fieldset>  
        <legend><span class="number">2</span> 정보 </legend>
      

        <label for="re-text" onclick="sample6_execDaumPostcode()">주소</label>
        <input type="text" id="sample6_postcode" name="member_address1" placeholder="우편번호" onclick="sample6_execDaumPostcode()" onclick="sample6_execDaumPostcode()" required readonly>
        <input type="text" id="sample6_address" name="member_address2" placeholder="주소" onclick="sample6_execDaumPostcode()" onclick="sample6_execDaumPostcode()" required readonly>
        <input type="text" id="sample6_detailAddress" name="member_address3" placeholder="상세주소" required>
        <input type="text" id="sample6_extraAddress" name="member_address4" placeholder="참고항목" onclick="sample6_execDaumPostcode()">

       <label for="name">이름</label>
       <input type="text" id="name" name="member_name" required>
       <label for="phone">전화번호</label>
       <input type="number" id="phone" name="member_phone" maxlength="11" required>
      </fieldset>
      <fieldset>
        <legend><span class="number">3</span> 개인정보 이용동의 </legend>
        <textarea name="" id="" cols="30" rows="10">

빌리언러브 (이하 ‘회사’라 함)가 제공하는 전자문진출입서비스의 회원가입을 이용하기 위해, 다음과 같이 ‘회사’가 본인의 개인정보를 수집 및 이용하고, 개인정보의 취급을 위탁하는 것에 동의합니다.
(1) 수집항목
• 이용자가 가입한 이동통신사, 휴대폰번호, 성명, 주소, 성별, 생년월일
• 이용자가 본인 확인 시 사용되는 인증용 이메일 주소
            
(2) 이용목적
• 서비스(회원가입, ID/PW찾기 등) 이용에 필요한 이용자 본인확인 여부 및 정보 전달 
• 부정 이용 방지 및 수사의뢰
• 회사의 동의 없이 영업방식 무단 유출 및 사용을 금지하기 위해 작성하는 영업비밀유지 계약서의 당사자의 정보가 회원가입 시 입력한 정보와 동일함 확인하기 위함 
• 서비스 무단 복제 및 유사 서비스 개발 사용과 배포를 방지하기 위함
• 서비스 사용 중 발생 가능한 분쟁, 불편사항에 사용자 정보를 확인하고 대응하기 위함
            
(3) 개인정보의 보유기간 및 이용기간
• ’회사’는 이용자의 개인정보를 이용목적이 달성되거나 보유 및 보존기간이 종료하면 해당 정보를 지체 없이 파기하며 별도의 보관을 하지 않습니다.
• 단, 관련 법령 및 회사 방침에 따라 보존하는 목적과 기간은 아래와 같습니다.
• 소비자의 불만 또는 분쟁 처리에 관한 기록 : 3년(전자상거래 등에서의 소비자보호에 관한 법률)
            
(4) 상기 개인정보 수집 및 이용과 취급 위탁에 동의하지 않으실 경우, 서비스를 이용하실 수 없습니다.
• '회사’가 제공하는 서비스의 개인정보 취급과 관련된 사항은 회사의 개인정보취급방침에 따릅니다. 본인은 위 내용을 숙지하였으며 이에 동의합니다. </textarea>
<div class="chk"> <input type="checkbox" required> 개인정보 이용의 동의합니다. </div>
 
      </fieldset>
      <input type="submit" value="회원가입">
      
     </form>
      </div>
    </div>

    <script src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
    <script>
      sample6_execDaumPostcode = () => {
          new daum.Postcode({
              oncomplete: function(data) {
                  // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.
  
                  // 각 주소의 노출 규칙에 따라 주소를 조합한다.
                  // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
                  var addr = ''; // 주소 변수
                  var extraAddr = ''; // 참고항목 변수
  
                  //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.
                  if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우
                      addr = data.roadAddress;
                  } else { // 사용자가 지번 주소를 선택했을 경우(J)
                      addr = data.jibunAddress;
                  }
  
                  // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.
                  if(data.userSelectedType === 'R'){
                      // 법정동명이 있을 경우 추가한다. (법정리는 제외)
                      // 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.
                      if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){
                          extraAddr += data.bname;
                      }
                      // 건물명이 있고, 공동주택일 경우 추가한다.
                      if(data.buildingName !== '' && data.apartment === 'Y'){
                          extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);
                      }
                      // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.
                      if(extraAddr !== ''){
                          extraAddr = ' (' + extraAddr + ')';
                      }
                      // 조합된 참고항목을 해당 필드에 넣는다.
                      document.getElementById("sample6_extraAddress").value = extraAddr;
                  
                  } else {
                      document.getElementById("sample6_extraAddress").value = '';
                  }
  
                  // 우편번호와 주소 정보를 해당 필드에 넣는다.
                  document.getElementById('sample6_postcode').value = data.zonecode;
                  document.getElementById("sample6_address").value = addr;
                  // 커서를 상세주소 필드로 이동한다.
                  document.getElementById("sample6_detailAddress").focus();
              }
          }).open();
      }

      document.querySelector('#email').addEventListener('change', ()=>{
        document.querySelector('.emailMsg').innerHTML = null;
      })

      let pwStatus

      submitChk = () => {
        if ( pwStatus == 1) {
            document.querySelector('#re-password').focus()
            return false
        }
      }

      document.querySelector('#re-password').addEventListener('change', ()=>{
        if(document.querySelector('#password').value != document.querySelector('#re-password').value) {
            document.querySelector('.pwMsg').innerHTML = '비밀번호가 일치하지 않습니다. ';
            pwStatus = 1
        }else{
            document.querySelector('.pwMsg').innerHTML = null;
            pwStatus = 0
        }
      })
      
  </script>